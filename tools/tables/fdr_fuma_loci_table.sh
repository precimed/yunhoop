#!/bin/bash
#--------------------------- Description ---------------------------------#

# This script tries to generate data for supplementary loci table
# (PleioFDR+FUMA+SUMSTAT) from PleioFDR/FUMA analysis WITHOUT WARRANTY.

# Yunhan Chu (yunhanch@gmail.com), Guy F. L. Hindley

# (c) 2020-2022 NORMENT, UiO

#-------------------------------------------------------------------------#
if [ $# -ne 3 ] && [ $# -ne 5 ] && [ $# -ne 8 ]; then
  echo "Usage:     sh fdr_fuma_loci_table.sh fdr_clump_loci_file fdr_fuma_snp_table outfile [trait1locifile trait2locifile] [fuma_gwasc keywords1 keywords2]"
  echo "Arguments: fdr_clump_loci_file - fdr clumping loci file"
  echo "           fdr_fuma_snp_table - TRAIT1_vs_TRAIT2_snps.txt file generated by script fdr_fuma_snp_table.sh"
  echo "           outfile - output file, recommanded to name as TRAIT1_vs_TRAIT2_loci.txt"
  echo "           trait1locifile - old loci file with 3 or 4 columns (CHR, MinBP, MaxBP, [leadSNP]) of trait1, use '-' for none"
  echo "           trait2locifile - old loci file with 3 or 4 columns (CHR, MinBP, MaxBP, [leadSNP]) of trait2, use '-' for none"
  echo "           fuma_gwasc - fuma gwascatalog file, use '-' for none"
  echo "           keywords1 - quoted keywords of trait1 combined with &, delimited by |, use '-' for none"
  echo "           keywords2 - quoted keywords of trait1 combined with &, delimited by |, use '-' for none"
  echo "Example:   sh fdr_fuma_loci_table.sh conj.result.clump.loci.csv ADHD_vs_MOOD_snps.txt ADHD_vs_MOOD_loci.txt adhd_gwas_loci.csv mood_gwas_loci.csv gwascatalog.txt 'attention & deficit & hyperact' 'mood & instab'"
  exit 0
fi
#-------------------------------------------------------------------------#

fdr_clump_loci_file=$1
fdr_fuma_snp_table=$2
outfile=$3

tag1=`basename $fdr_fuma_snp_table | cut -d'_' -f1`
tag2=`basename $fdr_fuma_snp_table | cut -d'_' -f3`
echo "locusnum	CHR	LEAD_SNP	LEAD_BP	MinBP	MaxBP	FDR	A1	A2	nearestGene	dist	func	CADD	RDB	minChrState	commonChrState	${tag1}_PVAL	${tag1}_Z	${tag1}_BETA	${tag1}_SE	${tag2}_PVAL	${tag2}_Z	${tag2}_BETA	${tag2}_SE	ConcordEffect" > $outfile

sort -s -k3,3 $fdr_clump_loci_file > $fdr_clump_loci_file.sorted
sort -s -k3,3 $fdr_fuma_snp_table > $fdr_fuma_snp_table.sorted

join -1 3 -2 3 $fdr_clump_loci_file.sorted $fdr_fuma_snp_table.sorted | grep -v FDR | awk '{print $2,$3,$1,$4,$5,$6,$7,$16,$17,$22,$23,$24,$25,$26,$27,$28,$32,$33,$34,$35,$36,$37,$38,$39,$40}' OFS='\t' | sort -n -k1,1 >> $outfile

rm -f $fdr_clump_loci_file.tmp
for loci in `join -1 3 -2 3 -a 1 $fdr_clump_loci_file.sorted $fdr_fuma_snp_table.sorted | grep -v locusnum | awk 'NF==7 {print $2}'`; do
    minbp=`awk -v loci=$loci '$1==loci {print $5}' $fdr_clump_loci_file`
    maxbp=`awk -v loci=$loci '$1==loci {print $6}' $fdr_clump_loci_file`
    awk -v loci=$loci -v minbp=$minbp -v maxbp=$maxbp '$1==loci {print $1,$2,$3,$4,minbp,maxbp,$8}' OFS='\t' $fdr_fuma_snp_table | sort -n -k7,7 | head -n1 >> $fdr_clump_loci_file.tmp
done

if [ -s $fdr_clump_loci_file.tmp ]; then
    sort -s -k3,3 $fdr_clump_loci_file.tmp > $fdr_clump_loci_file.tmp.sorted
    rm -f $fdr_clump_loci_file.tmp
    join -1 3 -2 3 $fdr_clump_loci_file.tmp.sorted $fdr_fuma_snp_table.sorted | grep -v FDR | awk '{print $2,$3,$1,$4,$5,$6,$7,$16,$17,$22,$23,$24,$25,$26,$27,$28,$32,$33,$34,$35,$36,$37,$38,$39,$40}' OFS='\t' | sort -n -k1,1 >> $outfile
    sort -n -k1,1 $outfile > ${outfile%.*}.tmp
    mv ${outfile%.*}.tmp $outfile
fi

if [ $# -ge 5 ]; then
    trait1locifile=$4
    trait2locifile=$5
    tail -n +2 $outfile | awk '{print $2,$5,$6}' OFS='\t' > ${outfile%.*}.tmp

    if [ "$trait1locifile" != "-" ]; then
        awk '{print $1,$2,$3}' OFS='\t' $trait1locifile > ${trait1locifile%.*}.tmp
        sh $(dirname $0)/../novelty/identify_overlap_and_novel_loci.sh ${outfile%.*}.tmp ${trait1locifile%.*}.tmp ${outfile%.*}_${tag1}
        awk '{print $1"-"$2"-"$3}' ${outfile%.*}.tmp > ${outfile%.*}.tmp2
        awk '{print $1"-"$2"-"$3}' ${outfile%.*}_${tag1}_novel_loci.txt > ${outfile%.*}_${tag1}_novel_loci.tmp
        rm -f ${outfile%.*}_${tag1}_novel_loci.tmp2
        for i in `cat ${outfile%.*}.tmp2`; do
            if [ `grep "^$i$" ${outfile%.*}_${tag1}_novel_loci.tmp | wc -l` -gt 0 ]; then
                echo $i"	Yes" >> ${outfile%.*}_${tag1}_novel_loci.tmp2
            else
                echo $i"	No" >> ${outfile%.*}_${tag1}_novel_loci.tmp2
            fi
        done
    fi
    if [ "$trait2locifile" != "-" ]; then
        awk '{print $1,$2,$3}' OFS='\t' $trait2locifile > ${trait2locifile%.*}.tmp
        sh $(dirname $0)/../novelty/identify_overlap_and_novel_loci.sh ${outfile%.*}.tmp ${trait2locifile%.*}.tmp ${outfile%.*}_${tag2}
        awk '{print $1"-"$2"-"$3}' ${outfile%.*}.tmp > ${outfile%.*}.tmp2
        awk '{print $1"-"$2"-"$3}' ${outfile%.*}_${tag2}_novel_loci.txt > ${outfile%.*}_${tag2}_novel_loci.tmp
        rm -f ${outfile%.*}_${tag2}_novel_loci.tmp2
        for i in `cat ${outfile%.*}.tmp2`; do
            if [ `grep "^$i$" ${outfile%.*}_${tag2}_novel_loci.tmp | wc -l` -gt 0 ]; then
                echo $i"	Yes" >> ${outfile%.*}_${tag2}_novel_loci.tmp2
            else
                echo $i"	No" >> ${outfile%.*}_${tag2}_novel_loci.tmp2
            fi
        done
    fi
fi

if [ $# -eq 8 ]; then
    fdr_clump_snp_file=${fdr_clump_loci_file/loci.csv/snps.csv}
    if [ ! -f $fdr_clump_snp_file ]; then
        echo "$fdr_clump_snp_file doesn't exist, please rename fdr clumping snps file as $fdr_clump_snp_file" 
        exit 1
    fi
    fuma_gwasc=$6
    tail -n +2 $outfile | cut -f1 > ${outfile%.*}.tmp3
    if [ "$fdr_clump_snp_file" != "-" ] && [ "$fuma_gwasc" != "-" ]; then
        keywords1=$7
        if [ "$keywords1" != "-" ]; then
            rm -f ${outfile%.*}_${tag1}_gwas.txt
            sh $(dirname $0)/../novelty/check_loci_in_gwasc.sh $fdr_clump_snp_file $fuma_gwasc "$keywords1" ${outfile%.*}_${tag1}_gwasc.txt
            cut -f1 ${outfile%.*}_${tag1}_gwasc.txt | uniq > ${outfile%.*}_${tag1}_novel_loci.tmp3
            rm -f ${outfile%.*}_${tag1}_novel_loci.tmp4
            for i in `cat ${outfile%.*}.tmp3`; do
                if [ `grep "^$i$" ${outfile%.*}_${tag1}_novel_loci.tmp3 | wc -l` -eq 0 ]; then
                    echo $i"	Yes" >> ${outfile%.*}_${tag1}_novel_loci.tmp4
                else
                    echo $i"	No" >> ${outfile%.*}_${tag1}_novel_loci.tmp4
                fi
            done
        fi
        keywords2=$8
        if [ "$keywords2" != "-" ]; then
            rm -f ${outfile%.*}_${tag2}_gwas.txt
            sh $(dirname $0)/../novelty/check_loci_in_gwasc.sh $fdr_clump_snp_file $fuma_gwasc "$keywords2" ${outfile%.*}_${tag2}_gwasc.txt
            cut -f1 ${outfile%.*}_${tag2}_gwasc.txt | uniq > ${outfile%.*}_${tag2}_novel_loci.tmp3
            rm -f ${outfile%.*}_${tag2}_novel_loci.tmp4
            for i in `cat ${outfile%.*}.tmp3`; do
                if [ `grep "^$i$" ${outfile%.*}_${tag2}_novel_loci.tmp3 | wc -l` -eq 0 ]; then
                    echo $i"	Yes" >> ${outfile%.*}_${tag2}_novel_loci.tmp4
                else
                    echo $i"	No" >> ${outfile%.*}_${tag2}_novel_loci.tmp4
                fi
            done
        fi
    fi
fi
if [ $# -ge 5 ]; then
    echo "locusnum	novel_in_novdb	novel_in_gwasc" > ${outfile%.*}_${tag1}_novelty.txt
    if [ -f ${outfile%.*}_${tag1}_novel_loci.tmp2 ] && [ -f ${outfile%.*}_${tag1}_novel_loci.tmp4 ]; then
        paste ${outfile%.*}_${tag1}_novel_loci.tmp2 ${outfile%.*}_${tag1}_novel_loci.tmp4 | awk '{print $3,$2,$4}' OFS='\t' >> ${outfile%.*}_${tag1}_novelty.txt
    elif [ ! -f ${outfile%.*}_${tag1}_novel_loci.tmp2 ] && [ -f ${outfile%.*}_${tag1}_novel_loci.tmp4 ]; then
        awk '{print $1,"Yes",$2}' OFS='\t' ${outfile%.*}_${tag1}_novel_loci.tmp4 >> ${outfile%.*}_${tag1}_novelty.txt
    elif [ -f ${outfile%.*}_${tag1}_novel_loci.tmp2 ] && [ ! -f ${outfile%.*}_${tag1}_novel_loci.tmp4 ]; then
        awk '{print $0,"Yes"}' OFS='\t' ${outfile%.*}_${tag1}_novel_loci.tmp2 >> ${outfile%.*}_${tag1}_novelty.txt
    fi

    awk '{if($2=="Yes" && $3=="Yes") print $0,"Yes"; else print $0,"No"}' OFS='\t' ${outfile%.*}_${tag1}_novelty.txt | sed "1s/No$/Novel_in_${tag1}/" > ${outfile%.*}_${tag1}_novelty.tmp
    mv ${outfile%.*}_${tag1}_novelty.tmp ${outfile%.*}_${tag1}_novelty.txt

    echo "locusnum	novel_in_novdb	novel_in_gwasc" > ${outfile%.*}_${tag2}_novelty.txt
    if [ -f ${outfile%.*}_${tag2}_novel_loci.tmp2 ] && [ -f ${outfile%.*}_${tag2}_novel_loci.tmp4 ]; then
        paste ${outfile%.*}_${tag2}_novel_loci.tmp2 ${outfile%.*}_${tag2}_novel_loci.tmp4 | awk '{print $3,$2,$4}' OFS='\t' >> ${outfile%.*}_${tag2}_novelty.txt
    elif [ ! -f ${outfile%.*}_${tag2}_novel_loci.tmp2 ] && [ -f ${outfile%.*}_${tag2}_novel_loci.tmp4 ]; then
        awk '{print $1,"Yes",$2}' OFS='\t' ${outfile%.*}_${tag2}_novel_loci.tmp4 >> ${outfile%.*}_${tag2}_novelty.txt
    elif [ -f ${outfile%.*}_${tag2}_novel_loci.tmp2 ] && [ ! -f ${outfile%.*}_${tag2}_novel_loci.tmp4 ]; then
        awk '{print $0,"Yes"}' OFS='\t' ${outfile%.*}_${tag2}_novel_loci.tmp2 >> ${outfile%.*}_${tag2}_novelty.txt
    fi

    awk '{if($2=="Yes" && $3=="Yes") print $0,"Yes"; else print $0,"No"}' OFS='\t' ${outfile%.*}_${tag2}_novelty.txt | sed "1s/No$/Novel_in_${tag2}/" > ${outfile%.*}_${tag2}_novelty.tmp
    mv ${outfile%.*}_${tag2}_novelty.tmp ${outfile%.*}_${tag2}_novelty.txt

    paste $outfile ${outfile%.*}_${tag1}_novelty.txt ${outfile%.*}_${tag2}_novelty.txt | cut -f1-25,29,33 > ${outfile%.*}.tmp4
    mv ${outfile%.*}.tmp4 $outfile
fi

if [ -s $fdr_clump_loci_file.tmp.sorted ]; then
    for loci in `cut -f1 $fdr_clump_loci_file.tmp.sorted`; do
        cat $outfile | sed "s/^$loci	/$loci*	/" > $outfile.tmp
        mv $outfile.tmp $outfile
    done
fi

if [ -f ${trait1locifile%.*}.tmp ]; then
    rm ${trait1locifile%.*}.tmp
fi
if [ -f ${trait2locifile%.*}.tmp ]; then
    rm ${trait2locifile%.*}.tmp
fi
rm -f $fdr_clump_loci_file.sorted $fdr_clump_loci_file.tmp.sorted $fdr_fuma_snp_table.sorted ${outfile%.*}.tmp* ${outfile%.*}_${tag1}_novel_loci.tmp* ${outfile%.*}_${tag2}_novel_loci.tmp*
rm -f ${outfile%.*}_${tag1}_novel_loci.txt ${outfile%.*}_${tag1}_overlap_loci.txt ${outfile%.*}_${tag2}_novel_loci.txt ${outfile%.*}_${tag2}_overlap_loci.txt
